name: backup.yaml

# 需要填写变量 ORIGINAL_OWNER ORIGINAL_REPOSITORY UPSTREAM_BRANCH MY_BRANCH
# 需要创建环境变量 MYGITHUB_TOKEN MYGITHUB_USERNAME
env:
  ORIGINAL_OWNER: gaboolic
  ORIGINAL_REPOSITORY: vercel-reverse-proxy
  MYORIGINAL_REPOSITORY: vercel-reverse-proxy
  UPSTREAM_BRANCH: main
  MY_BRANCH: main

on:
  workflow_dispatch:
  repository_dispatch:
    types: [1]
  schedule:
    - cron: '0 */2 * * *'

jobs:
  sync-fork:
    runs-on: ubuntu-latest
    env:
      MYSALT: ${{ secrets.MYSALT }}
      MYPASSWD: ${{ secrets.MYPASSWD }}
    steps:
    - name: set env
      run: |
          echo "HIFLOW_PUSH1=${{ secrets.HIFLOW_PUSH1 }}" >> $GITHUB_ENV
          echo "ORIGINAL_OWNER=${{ env.ORIGINAL_OWNER }}" >> $GITHUB_ENV
          echo "ORIGINAL_REPOSITORY=${{ env.ORIGINAL_REPOSITORY }}" >> $GITHUB_ENV
          echo "MYORIGINAL_REPOSITORY=${{ env.MYORIGINAL_REPOSITORY }}" >> $GITHUB_ENV
          echo "UPSTREAM_BRANCH=${{ env.UPSTREAM_BRANCH }}" >> $GITHUB_ENV
          echo "MY_BRANCH=${{ env.MY_BRANCH }}" >> $GITHUB_ENV
          echo "GH_TOKEN=${{ secrets.MYGITHUB_TOKEN }}" >> $GITHUB_ENV
          echo "repository_owner=${{ github.repository_owner }}" >> $GITHUB_ENV
          echo "repository=${{ github.repository }}" >> $GITHUB_ENV
          echo "PUSH_TOKEN=${{ secrets.PUSH_TOKEN }}" >> $GITHUB_ENV
          echo "MYPASSWD=${{ secrets.MYPASSWD }}" >> $GITHUB_ENV
          echo "MYSALT=${{ secrets.MYSALT }}" >> $GITHUB_ENV

    - name: Use Node.js 16
      uses: actions/setup-node@v2
      with:
        node-version: 16
        
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: 安装依赖 Install dependencies
      run: sudo apt-get install jq curl rclone argon2

    - name: key
      run: |
          wget --no-check-certificate -O ../key.sh https://git.blog.jiangqing.xyz/shell/linux/actions/key.sh
          bash ../key.sh

    - name: Clone
      run: |
          git clone git@github.com:find-xposed-magisk/youdao.git -b main ./youdao
          if [ $? -ne 0 ]; then
            echo "克隆失败：无法克隆仓库"
            exit 1
          fi
          echo "克隆完成 (Cloning completed)"

    - name: rclone_backup
      run: |
        bash ./youdao/shell/linux/actions/rclone_backup.sh